services:

  backend:
    container_name: backend
    build:
      context: ./backend/
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./backend:/app/
      #- staticfiles:/var/www/static/
      #- mediafiles:/var/www/media/
    ports:
      - "8000:8000"
    networks:
      - ft_transcendence
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:14
    container_name: database
    env_file:
      - .env
    networks:
      - ft_transcendence
    volumes:
      -  postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5

  #nginx:
  #  container_name: nginx
  #  image: nginx:latest
  #  restart: on-failure
  #  depends_on:
  #    - backend
  #  ports:
  #    - "8000:8000"
  #  volumes:
  #    - ./backend/tools/ssl/transcendence.crt:/etc/nginx/ssl/transcendence.crt
  #    - ./backend/tools/ssl/transcendence.key:/etc/nginx/ssl/transcendence.key
  #    - ./backend/tools/nginx.conf:/etc/nginx/nginx.conf
  #    - staticfiles:/var/www/static/
  #    - mediafiles:/var/www/media/   

volumes:
  postgres_data:
  #staticfiles:
  #  driver: local
  #mediafiles:
  #  driver: local
  #backend:
  #  driver: local
  #  driver_opts:
  #    type: none
  #    device: ./srcs/backend
  #    o: bind

networks:
  ft_transcendence:
    name: ft_transcendence
    driver: bridge